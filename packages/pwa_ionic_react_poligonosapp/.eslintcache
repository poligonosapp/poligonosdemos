[{"C:\\Users\\luism\\poligonosdemos\\packages\\pwa_ionic_react_poligonosapp\\src\\App.tsx":"1","C:\\Users\\luism\\poligonosdemos\\packages\\pwa_ionic_react_poligonosapp\\src\\pages\\Tab2.tsx":"2","C:\\Users\\luism\\poligonosdemos\\packages\\pwa_ionic_react_poligonosapp\\src\\pages\\Tab1.tsx":"3","C:\\Users\\luism\\poligonosdemos\\packages\\pwa_ionic_react_poligonosapp\\src\\pages\\Tab3.tsx":"4","C:\\Users\\luism\\poligonosdemos\\packages\\pwa_ionic_react_poligonosapp\\src\\index.js":"5"},{"size":6458,"mtime":1615145251434,"results":"6","hashOfConfig":"7"},{"size":834,"mtime":1614425769936,"results":"8","hashOfConfig":"7"},{"size":2181,"mtime":1614697856973,"results":"9","hashOfConfig":"7"},{"size":768,"mtime":1614425769945,"results":"10","hashOfConfig":"7"},{"size":706,"mtime":1614613190019,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},"ad8vva",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\luism\\poligonosdemos\\packages\\pwa_ionic_react_poligonosapp\\src\\App.tsx",["24"],"import { mapFetchFunction } from './pages/oneGeoJSON';\r\n\r\n\r\n// import GeoJSON from 'leaflet';//response\r\n\r\nlet $ = require('jquery');\r\n\r\nimport React, { useState } from 'react';\r\nimport { useAuth0 } from '@auth0/auth0-react';\r\n// import { Profile } from './pages/Profile';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport {\r\n  IonSpinner,\r\n  IonApp,\r\n  IonIcon,\r\n  IonLabel,\r\n  IonRouterOutlet,\r\n  IonTabBar,\r\n  IonTabButton,\r\n  IonTabs,\r\n  IonButton\r\n} from '@ionic/react';\r\nimport { IonReactRouter } from '@ionic/react-router';\r\nimport { ellipse, square, triangle } from 'ionicons/icons';\r\nimport Tab1 from './pages/Tab1';\r\nimport Tab2 from './pages/Tab2';\r\nimport Tab3 from './pages/Tab3';\r\n\r\n/* Core CSS required for Ionic components to work properly */\r\nimport '@ionic/react/css/core.css';\r\n\r\n/* Basic CSS for apps built with Ionic */\r\nimport '@ionic/react/css/normalize.css';\r\nimport '@ionic/react/css/structure.css';\r\nimport '@ionic/react/css/typography.css';\r\n\r\n/* Optional CSS utils that can be commented out */\r\nimport '@ionic/react/css/padding.css';\r\nimport '@ionic/react/css/float-elements.css';\r\nimport '@ionic/react/css/text-alignment.css';\r\nimport '@ionic/react/css/text-transformation.css';\r\nimport '@ionic/react/css/flex-utils.css';\r\nimport '@ionic/react/css/display.css';\r\n\r\n/* Theme variables */\r\nimport './theme/variables.css';\r\nimport './index.css';\r\n\r\n// let admin = require('firebase-admin');\r\nimport * as admin from 'firebase-admin';\r\nimport * as url from \"url\";\r\n\r\nadmin.initializeApp({\r\n  credential: admin.credential.applicationDefault(),\r\n  databaseURL: 'https://poligonosapp-default-rtdb.firebaseio.com/'\r\n});\r\n\r\nlet refreshToken;\r\nlet idToken = \"process.env.REACT_APP_AUTH0_CLIENT_ID\";\r\n\r\nfirebase.auth().currentUser.getIdToken(true).then(function (idToken) {\r\n  // Send token to your backend via HTTPS\r\n  // ...\r\n\r\nrefreshToken = admin.initializeApp();// new token \r\n\r\n}).catch(function(error) {\r\n  // Handle error\r\n});\r\n\r\n// \"process.env.FIREBASE_REFRESH_TOKEN\"=refreshToken; // Get refresh token from OAuth2 flow\r\n\r\nadmin.initializeApp({\r\n  credential: admin.credential.refreshToken(refreshToken),\r\n  databaseURL: 'https://poligonosapp-default-rtdb.firebaseio.com/'\r\n});\r\n\r\n// Initialize the default app\r\n// var admin = require('firebase-admin');\r\nlet app = admin.initializeApp();\r\n\r\nconst defaultAppConfig = \"process.env.DEFAULT_CONFIG\" | null ;\r\nconst otherAppConfig = \"process.env.OTHER_APP_CONFIG\" | null;\r\n\r\n// Initialize the default app\r\nlet defaultApp = admin.initializeApp(defaultAppConfig);\r\n\r\nconsole.log(defaultApp.name);  // '[DEFAULT]'\r\n\r\n// Retrieve services via the defaultApp variable...\r\nlet defaultAuth = defaultApp.auth();\r\nlet defaultDatabase = defaultApp.database();\r\n\r\n// ... or use the equivalent shorthand notation\r\ndefaultAuth = admin.auth();\r\ndefaultDatabase = admin.database();\r\n\r\n// Initialize the default app\r\nadmin.initializeApp(defaultAppConfig);\r\n\r\n// Initialize another app with a different config\r\nlet otherApp = admin.initializeApp(otherAppConfig, 'other');\r\n\r\n// console.log(admin.app().name);  // '[DEFAULT]'\r\n// console.log(otherApp.name);     // 'other'\r\n\r\n// Use the shorthand notation to retrieve the default app's services\r\ndefaultAuth = admin.auth();\r\ndefaultDatabase = admin.database();\r\n\r\n// Use the otherApp variable to retrieve the other app's services\r\nlet otherAuth = otherApp.auth();\r\nlet otherDatabase = otherApp.database();\r\n\r\n\r\n// var admin = require(\"firebase-admin\");\r\n\r\nlet serviceAccount = require(\"./google-services.json\");\r\n\r\nadmin.initializeApp({\r\n  credential: admin.credential.cert(serviceAccount),\r\n  databaseURL: \"https://poligonosapp-default-rtdb.firebaseio.com\"\r\n});\r\n\r\n//JQuery\r\nlet settings = await {\r\n  \"async\": true,\r\n  \"crossDomain\": true,\r\n  \"url\": \"https://luismendes070.auth0.com/oauth/token\",\r\n  \"method\": \"POST\",\r\n  \"headers\": {\r\n    \"content-type\": \"application/json\"\r\n  },\r\n  \"data\": require('./data.json')\r\n};\r\n\r\n\r\n// const App: React.FC = () => (\r\nfunction App() {\r\n\r\n\r\nlet [response, setResponse] = useState(null);\r\n\r\n  // await fetch('process.env.endpoint');\r\n\r\n // const [state, setState] = mapFetchFunction(mymap);\r\n\r\n // await $.ajax(settings).done( (response: JSON) => {\r\n    // setResponse(response);\r\n    // console.log(response);\r\n  // });\r\n//Node\r\nlet request = require(\"request\");\r\n\r\nlet options = {\r\n  method: 'POST',\r\n  url: 'https://luismendes070.auth0.com/oauth/token',\r\n  headers: { 'content-type': 'application/json' },\r\n  body:\r\n    '{\"client_id\":\"process.env.CLIENT_ID\",\"client_secret\":\"process.env.CLIENT_SECRET\",\"audience\": \"process.env.AUDIENCE\",\"grant_type\": \"client_credentials\"}'\r\n};\r\n\r\nrequest(options, function (error, body) {\r\n  if (error) throw new Error(error);\r\n\r\n  console.log(body);\r\n});\r\n\r\n  let {\r\n    isLoading,\r\n    isAuthenticated,\r\n    error,\r\n    user,\r\n    loginWithRedirect,\r\n    logout,\r\n  } = useAuth0();\r\n\r\n// isAuthenticated = false;\r\n// isLoading = true;\r\n\r\nif (isLoading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n  if (error) {\r\n    return <div>Oops... {error.message}</div>;\r\n}\r\n  \r\n\r\nif (isAuthenticated) {\r\n\r\n    return (\r\n      \r\n\r\n      <IonApp>\r\n    <IonReactRouter>\r\n      <IonTabs>\r\n        <IonRouterOutlet>\r\n          <Route path=\"/tab1\" component={Tab1} exact={true} />\r\n          <Route path=\"/tab2\" component={Tab2} exact={true} />\r\n          <Route path=\"/tab3\" component={Tab3} />\r\n          <Route path=\"/\" render={() => <Redirect to=\"/tab1\" />} exact={true} />\r\n        </IonRouterOutlet>\r\n        <IonTabBar slot=\"bottom\">\r\n          <IonTabButton tab=\"tab1\" href=\"/tab1\">\r\n            <IonIcon icon={triangle} />\r\n            <IonLabel>Tab 1</IonLabel>\r\n            <IonSpinner />\r\n\r\n           \r\n            \r\n            Hello {user.name} \r\n\r\n        <IonButton onClick={() => logout({ returnTo: window.location.origin })}>\r\n          Log out\r\n        </IonButton>\r\n\r\n                \r\n                \r\n          </IonTabButton>\r\n          <IonTabButton tab=\"tab2\" href=\"/tab2\">\r\n            <IonIcon icon={ellipse} />\r\n            <IonLabel>Tab 2</IonLabel>\r\n          </IonTabButton>\r\n          <IonTabButton tab=\"tab3\" href=\"/tab3\">\r\n            <IonIcon icon={square} />\r\n            <IonLabel>Tab 3</IonLabel>\r\n          </IonTabButton>\r\n        </IonTabBar>\r\n      </IonTabs>\r\n    </IonReactRouter>\r\n  </IonApp>\r\n    );\r\n  } else {\r\n    return <IonButton onClick={() => loginWithRedirect}>Log in</IonButton>;\r\n  }\r\n\r\n  \r\n// );\r\n};\r\n\r\nexport default App;\r\n","C:\\Users\\luism\\poligonosdemos\\packages\\pwa_ionic_react_poligonosapp\\src\\pages\\Tab2.tsx",[],[],"C:\\Users\\luism\\poligonosdemos\\packages\\pwa_ionic_react_poligonosapp\\src\\pages\\Tab1.tsx",[],"C:\\Users\\luism\\poligonosdemos\\packages\\pwa_ionic_react_poligonosapp\\src\\pages\\Tab3.tsx",[],"C:\\Users\\luism\\poligonosdemos\\packages\\pwa_ionic_react_poligonosapp\\src\\index.js",[],{"ruleId":null,"fatal":true,"severity":2,"message":"25","line":126,"column":16},"Parsing error: Unexpected reserved word 'await'\n\n\u001b[0m \u001b[90m 124 |\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 125 |\u001b[39m \u001b[90m//JQuery\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 126 |\u001b[39m \u001b[36mlet\u001b[39m settings \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m     |\u001b[39m                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 127 |\u001b[39m   \u001b[32m\"async\"\u001b[39m\u001b[33m:\u001b[39m \u001b[36mtrue\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 128 |\u001b[39m   \u001b[32m\"crossDomain\"\u001b[39m\u001b[33m:\u001b[39m \u001b[36mtrue\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 129 |\u001b[39m   \u001b[32m\"url\"\u001b[39m\u001b[33m:\u001b[39m \u001b[32m\"https://luismendes070.auth0.com/oauth/token\"\u001b[39m\u001b[33m,\u001b[39m\u001b[0m"]