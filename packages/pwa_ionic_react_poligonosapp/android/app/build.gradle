apply plugin: 'com.android.application'

apply plugin: 'com.google.gms.google-services'

android {
    compileSdkVersion 28
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "com.github.luismendes070.poligonosdemos.poligonosapp"
        minSdkVersion 15
        targetSdkVersion 28
        versionCode 1.6
        versionName "1.6.2"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {

        customDebugType {
            debuggable true
        }

        debug{
            minifyEnabled false
        }

        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildToolsVersion '29.0.3'
    ndkVersion '22.0.7026061'
    dependenciesInfo {
        includeInApk true
        includeInBundle true
    }
}

repositories {
    // flatDir{dirs '../capacitor-cordova-android-plugins/src/main/libs', 'libs'}
    mavenCentral()
    google()
    jcenter()
    mavenLocal()
}

/**
 * The productFlavors block is where you can configure multiple product flavors.
 * This allows you to create different versions of your app that can
 * override the defaultConfig block with their own settings. Product flavors
 * are optional, and the build system does not create them by default.
 *
 * This example creates a free and paid product flavor. Each product flavor
 * then specifies its own application ID, so that they can exist on the Google
 * Play Store, or an Android device, simultaneously.
 *
 * If you declare product flavors, you must also declare flavor dimensions
 * and assign each flavor to a flavor dimension.
 */

flavorDimensions "tier"
productFlavors {
    free {
        dimension "tier"
        applicationId 'com.github.luismendes.poligonosdemos.poligonosapp.free'
    }

    paid {
        dimension "tier"
        applicationId 'com.github.luismendes.poligonosdemos.poligonosapp.paid'
    }
}

/**
 * The splits block is where you can configure different APK builds that
 * each contain only code and resources for a supported screen density or
 * ABI. You'll also need to configure your build so that each APK has a
 * different versionCode.
 */

splits {
    // Settings to build multiple APKs based on screen density.
    density {

        // Enable or disable building multiple APKs.
        enable false

        // Exclude these densities when building multiple APKs.
        exclude "ldpi", "tvdpi", "xxxhdpi", "400dpi", "560dpi"
    }
}


/**
 * The dependencies block in the module-level build configuration file
 * specifies dependencies required to build only the module itself.
 * To learn more, go to Add build dependencies.
 */

dependencies {

    implementation 'com.google.android.gms:play-services-location:18.0.0'

    androidTestImplementation "io.cucumber:cucumber-android:$cucumberVersion"

    implementation project(":lib")
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "com.android.support:appcompat-v7:${rootProject.ext.supportLibVersion}"
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    //implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(':capacitor-android')
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.gms:play-services-ads:19.7.0'
    implementation "androidx.appcompat:appcompat:$androidxAppCompatVersion"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation "junit:junit:$junitVersion"
    implementation 'com.google.firebase:firebase-admin:7.1.0'
    androidTestImplementation "androidx.test.ext:junit:$androidxJunitVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$androidxEspressoCoreVersion"
    implementation project(':capacitor-cordova-android-plugins')

    implementation project('com.github.luismendes070.poligonosdemos.poligonosapp')
    // classpath 'com.google.gms:google-services:4.3.5'
    implementation platform('com.google.firebase:firebase-bom:26.6.0')
    implementation 'com.google.firebase:firebase-analytics'
}

apply plugin: 'capacitor.build.gradle'

try {
    def servicesJSON = file('google-services.json')
    if (servicesJSON.text) {
        apply plugin: 'com.google.gms.google-services'
        apply plugin: 'capacitor.build.gradle'
    }
} catch (Exception e) {
    logger.warn("google-services.json not found, google-services plugin not applied. Push Notifications won't work")
}